@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dct: <http://purl.org/terms/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix lotaf: <https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II#> .
@prefix mod: <https://w3id.org/mod#> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

#Change rml:source to the INPUT JSON file desired

# Mapping for Person
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Person>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].Person"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Person/{givenName}_{lastName}";
        rr:class foaf:Person
    ] ;
    rr:predicateObjectMap [
        rr:predicate foaf:givenName ;
        rr:objectMap [ rml:reference "givenName" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate foaf:lastName ;
        rr:objectMap [ rml:reference "lastName" ] ;
    ] .

# Mapping for Membership
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Membership>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].Membership"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Membership/{identifier}";
        rr:class org:Membership
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate org:member ;
        rr:objectMap [ rml:reference "member" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate org:role ;
        rr:objectMap [ rml:reference "role" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate org:organization ;
        rr:objectMap [ rml:reference "organization" ] ;
    ] .

# Mapping for Role
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Role>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].Role"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Role/{identifier}";
        rr:class org:Role
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:follow ;
        rr:objectMap [ rml:reference "follow" ] ;
    ] .

# Mapping for User
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/User>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].User"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/User/{identifier}";
        rr:class lotaf:User
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:manages ;
        rr:objectMap [ rml:reference "manages" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdfs:subClassOf ;
        rr:objectMap [ rr:constant lotaf:Person ]
    ] .

# Mapping for CapabilityOperator
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/CapabilityOperator>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].CapabilityOperator"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/CapabilityOperator/{identifier}";
        rr:class lotaf:CapabilityOperator
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:defines ;
        rr:objectMap [ rml:reference "defines" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdfs:subClassOf ;
        rr:objectMap [ rr:constant lotaf:User ]
    ] .

# Mapping for NetworkAdministrator
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/NetworkAdministrator>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].NetworkAdministrator"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/NetworkAdministrator/{identifier}";
        rr:class lotaf:NetworkAdministrator
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:monitors ;
        rr:objectMap [ rml:reference "monitors" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdfs:subClassOf ;
        rr:objectMap [ rr:constant lotaf:User ]
    ] .

# Mapping for Organization
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Organization>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].Organization"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Organization/{identifier}";
        rr:class org:Organization
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] .

# Mapping for Intent
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Intent>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].Intent"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Intent/{identifier}";
        rr:class lotaf:Intent
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:type ;
        rr:objectMap [ rml:reference "type" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:target ;
        rr:objectMap [ rml:reference "target" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:hasAgreement ;
        rr:objectMap [ rml:reference "hasAgreement" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:hasService ;
        rr:objectMap [ rml:reference "hasService" ] ;
    ] .

# Mapping for TrustLevelAgreement
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/TrustLevelAgreement>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].TrustLevelAgreement"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/TrustLevelAgreement/{identifier}";
        rr:class lotaf:TrustLevelAgreement
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:consumerID ;
        rr:objectMap [ rml:reference "consumerID" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:providerID ;
        rr:objectMap [ rml:reference "providerID" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:requirements ;
        rr:objectMap [ rml:reference "requirements" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:violationDescription ;
        rr:objectMap [ rml:reference "violationDescription" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:penalties ;
        rr:objectMap [ rml:reference "penalties" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:hasLoT ;
        rr:objectMap [ rml:reference "hasLoT" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:issue ;
        rr:objectMap [ rml:reference "issue" ] ;
    ] .

# Mapping for Punishment
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Punishment>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].Punishment"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Punishment/{identifier}";
        rr:class lotaf:Punishment
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdf:value ;
        rr:objectMap [ rml:reference "value" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:actions ;
        rr:objectMap [ rml:reference "actions" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:counterMeasures ;
        rr:objectMap [ rml:reference "counterMeasures" ] ;
    ] .

# Mapping for Reward
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Reward>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].Reward"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Reward/{identifier}";
        rr:class lotaf:Reward
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdf:value ;
        rr:objectMap [ rml:reference "value" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:actions ;
        rr:objectMap [ rml:reference "actions" ] ;
    ] .

# Mapping for LevelOfTrust
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/LevelOfTrust>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].LevelOfTrust"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/LevelOfTrust/{identifier}";
        rr:class lotaf:LevelOfTrust
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:trustor ;
        rr:objectMap [ rml:reference "trustor" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:trustee ;
        rr:objectMap [ rml:reference "trustee" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:iot ;
        rr:objectMap [ rml:reference "iot" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:tlaID ;
        rr:objectMap [ rml:reference "tlaID" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:starTime ;
        rr:objectMap [ rml:reference "starTime" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:stopTime ;
        rr:objectMap [ rml:reference "stopTime" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:gathers ;
        rr:objectMap [ rml:reference "gathers" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:receivesReward ;
        rr:objectMap [ rml:reference "receivesReward" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:receivesPunish ;
        rr:objectMap [ rml:reference "receivesPunish" ] ;
    ] .

# Mapping for Indicator
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Indicator>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].Indicator"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Indicator/{identifier}";
        rr:class lotaf:Indicator
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] .

# Mapping for ObjectiveIndicator
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/ObjectiveIndicator>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].ObjectiveIndicator"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/ObjectiveIndicator/{identifier}";
        rr:class lotaf:ObjectiveIndicator
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:stability ;
        rr:objectMap [ rml:reference "stability" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:reliability ;
        rr:objectMap [ rml:reference "reliability" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:scalability ;
        rr:objectMap [ rml:reference "scalability" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:availability ;
        rr:objectMap [ rml:reference "availability" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdfs:subClassOf ;
        rr:objectMap [ rr:constant lotaf:Indicator ]
    ] .

# Mapping for SubjectiveIndicator
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/SubjectiveIndicator>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].SubjectiveIndicator"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/SubjectiveIndicator/{identifier}";
        rr:class lotaf:SubjectiveIndicator
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:credibility ;
        rr:objectMap [ rml:reference "credibility" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:feedback ;
        rr:objectMap [ rml:reference "feedback" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdfs:subClassOf ;
        rr:objectMap [ rr:constant lotaf:Indicator ]
    ] .

# Mapping for NetworkService
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/NetworkService>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].NetworkService"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/NetworkService/{identifier}";
        rr:class lotaf:NetworkService
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:scope ;
        rr:objectMap [ rml:reference "scope" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:iot ;
        rr:objectMap [ rml:reference "iot" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:hasStatus ;
        rr:objectMap [ rml:reference "hasStatus" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:hasLoT ;
        rr:objectMap [ rml:reference "hasLoT" ] ;
    ] .

# Mapping for Cloud
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Cloud>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].Cloud"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Cloud/{identifier}";
        rr:class lotaf:Cloud
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:scope ;
        rr:objectMap [ rml:reference "scope" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:iot ;
        rr:objectMap [ rml:reference "iot" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:description ;
        rr:objectMap [ rml:reference "description" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:properties ;
        rr:objectMap [ rml:reference "properties" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:offer ;
        rr:objectMap [ rml:reference "offer" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdfs:subClassOf ;
        rr:objectMap [ rr:constant lotaf:NetworkService ]
    ] .

# Mapping for Edge
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Edge>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].Edge"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Edge/{identifier}";
        rr:class lotaf:Edge
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:scope ;
        rr:objectMap [ rml:reference "scope" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:iot ;
        rr:objectMap [ rml:reference "iot" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:description ;
        rr:objectMap [ rml:reference "description" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:properties ;
        rr:objectMap [ rml:reference "properties" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:offer ;
        rr:objectMap [ rml:reference "offer" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdfs:subClassOf ;
        rr:objectMap [ rr:constant lotaf:NetworkService ]
    ] .

# Mapping for FarEdge
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/FarEdge>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].FarEdge"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/FarEdge/{identifier}";
        rr:class lotaf:FarEdge
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:scope ;
        rr:objectMap [ rml:reference "scope" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:iot ;
        rr:objectMap [ rml:reference "iot" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:description ;
        rr:objectMap [ rml:reference "description" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:properties ;
        rr:objectMap [ rml:reference "properties" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:offer ;
        rr:objectMap [ rml:reference "offer" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdfs:subClassOf ;
        rr:objectMap [ rr:constant lotaf:NetworkService ]
    ] .

# Mapping for CloudContinuum
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/CloudContinuum>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].CloudContinuum"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/CloudContinuum/{identifier}";
        rr:class lotaf:CloudContinuum
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:scope ;
        rr:objectMap [ rml:reference "scope" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:iot ;
        rr:objectMap [ rml:reference "iot" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:description ;
        rr:objectMap [ rml:reference "description" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:properties ;
        rr:objectMap [ rml:reference "properties" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:offer ;
        rr:objectMap [ rml:reference "offer" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdfs:subClassOf ;
        rr:objectMap [ rr:constant lotaf:NetworkService ]
    ] .

# Mapping for CloudEdgeContinuum
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/CloudEdgeContinuum>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].CloudEdgeContinuum"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/CloudEdgeContinuum/{identifier}";
        rr:class lotaf:CloudEdgeContinuum
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:scope ;
        rr:objectMap [ rml:reference "scope" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:iot ;
        rr:objectMap [ rml:reference "iot" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:description ;
        rr:objectMap [ rml:reference "description" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:properties ;
        rr:objectMap [ rml:reference "properties" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:offer ;
        rr:objectMap [ rml:reference "offer" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdfs:subClassOf ;
        rr:objectMap [ rr:constant lotaf:NetworkService ]
    ] .

# Mapping for NetworkStatus
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/NetworkStatus>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].NetworkStatus"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/NetworkStatus/{identifier}";
        rr:class lotaf:NetworkStatus
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:connectionStatus ;
        rr:objectMap [ rml:reference "connectionStatus" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:qos ;
        rr:objectMap [ rml:reference "qos" ] ;
    ] .

# Mapping for AccessRule
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/AccessRule>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].AccessRule"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/AccessRule/{identifier}";
        rr:class lotaf:AccessRule
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:condition ;
        rr:objectMap [ rml:reference "condition" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:grants ;
        rr:objectMap [ rml:reference "grants" ] ;
    ] .

# Mapping for Permission
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Permission>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].Permission"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Permission/{identifier}";
        rr:class lotaf:NetworkStatus
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:expiration ;
        rr:objectMap [ rml:reference "expiration" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:access ;
        rr:objectMap [ rml:reference "access" ] ;
    ] .

# Mapping for Asset
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Asset>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].Asset"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Asset/{identifier}";
        rr:class lotaf:Asset
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:type ;
        rr:objectMap [ rml:reference "type" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:contains ;
        rr:objectMap [ rml:reference "contains" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:has ;
        rr:objectMap [ rml:reference "has" ] ;
    ] .

# Mapping for AssetServer
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/AssetServer>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].AssetServer"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/AssetServer/{identifier}";
        rr:class lotaf:AssetServer
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:type ;
        rr:objectMap [ rml:reference "type" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdfs:subClassOf ;
        rr:objectMap [ rr:constant lotaf:Asset ]
    ] .

# Mapping for Resource
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Resource>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].Resource"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Resource/{identifier}";
        rr:class lotaf:Resource
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:type ;
        rr:objectMap [ rml:reference "type" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:capacity ;
        rr:objectMap [ rml:reference "capacity" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:endpoint ;
        rr:objectMap [ rml:reference "endpoint" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdfs:subClassOf ;
        rr:objectMap [ rr:constant lotaf:Asset ]
    ] .

# Mapping for Infrastructure
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Infrastructure>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].Infrastructure"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Infrastructure/{identifier}";
        rr:class lotaf:Infrastructure
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:type ;
        rr:objectMap [ rml:reference "type" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:capacity ;
        rr:objectMap [ rml:reference "capacity" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:endpoint ;
        rr:objectMap [ rml:reference "endpoint" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdfs:subClassOf ;
        rr:objectMap [ rr:constant lotaf:Resource ]
    ] .

# Mapping for Service
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Service>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].Service"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Service/{identifier}";
        rr:class lotaf:Service
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:type ;
        rr:objectMap [ rml:reference "type" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:capacity ;
        rr:objectMap [ rml:reference "capacity" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:endpoint ;
        rr:objectMap [ rml:reference "endpoint" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:contains ;
        rr:objectMap [ rml:reference "contains" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:has ;
        rr:objectMap [ rml:reference "has" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdfs:subClassOf ;
        rr:objectMap [ rr:constant lotaf:Asset ]
    ] .

# Mapping for Subservice
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Subservice>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].Subservice"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Subservice/{identifier}";
        rr:class lotaf:Subservice
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:parameters ;
        rr:objectMap [ rml:reference "parameters" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:metrics ;
        rr:objectMap [ rml:reference "metrics" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:operations ;
        rr:objectMap [ rml:reference "operations" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:has ;
        rr:objectMap [ rml:reference "has" ] ;
    ] .

# Mapping for Symptom
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Symptom>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].Symptom"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/Symptom/{identifier}";
        rr:class lotaf:Symptom
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:description ;
        rr:objectMap [ rml:reference "description" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:typeOf ;
        rr:objectMap [ rr:constant lotaf:Person ]
    ] .

# Mapping for HealthStatus
<https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/HealthStatus>
    rml:logicalSource [
        rml:source "./prueba.json" ;
        rml:referenceFormulation ql:JSONPath ;
        rml:iterator "$[*].HealthStatus"
    ] ;
    rr:subjectMap [
        rr:template "https://github.com/JoseJMJV/Knowledge-graphs-for-LoTAF/tree/Hexa-X-II/HealthStatus/{identifier}";
        rr:class lotaf:HealthStatus
    ] ;
    rr:predicateObjectMap [
        rr:predicate dct:identifier ;
        rr:objectMap [ rml:reference "identifier" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:currentStatus ;
        rr:objectMap [ rml:reference "currentStatus" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:connectionStatus ;
        rr:objectMap [ rml:reference "connectionStatus" ] ;
    ] ;
    rr:predicateObjectMap [
        rr:predicate lotaf:healthScore ;
        rr:objectMap [ rml:reference "healthScore" ]
    ] .
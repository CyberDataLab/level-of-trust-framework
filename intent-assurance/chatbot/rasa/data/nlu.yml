version: "3.1"

nlu:
- intent: cancel
  examples: |
    - Start over
    - Please cancel
    - Cancel
    - Cancel that
    - Abort
    - Stop
    - I want to cancel
    - I want to stop
    - I want to start over
    - stop that
    - cancel that
    - abort all processes
    - nevermind
    - exit
    - quit
    - forget it
    - Nevermind
    - I don't want to do that
    - I don't want to continue
    - I don't want to proceed
    - nvm
- intent: confirm
  examples: |
    - sure
    - okay
    - sounds correct
    - that works
    - yep that's ok
    - yes that's alright
    - I think so
    - yes I agree
    - I don't mind
    - I agree
    - yes I do
    - for sure
    - ok
    - yes that't ok
    - that one works
    - yes you can do it
    - perfect
    - yes
    - why not
    - of course
    - yep that's right
    - okay I will
    - exactly
    - sure why not
    - absolutely
    - it's okay
    - it's fine
    - go ahead
    - confirm
    - sounds good
    - alright
    - yeah
    - yup
    - yes please
    - do it
    - yes I can
    - it looks perfect
    - that's correct
    - right
    - alright why not
    - yep
- intent: reject
  examples: |
    - don't
    - nope not really
    - no that's be all
    - not right now
    - thanks but no
    - not
    - no we are good
    - nothing else
    - not interested
    - nah I'm good
    - definitely not
    - no never
    - never
    - nah
    - nothing
    - no maybe next time
    - I don't want that
    - no not really
    - no that's ok
    - no no don't
    - na
    - no way no
    - I can't
    - no thanks
    - not at all
    - not really
    - I don't
    - no I cannot
    - no that's okay
    - nope
    - I don't think so
    - no it isn't
    - thanks but not this time
    - no that's fine thank you
    - no don't
    - don't do it
    - I don't want
    - not today
    - I'm not
    - no way
    - no
    - I disagree
    - not this time
    - nothing else thanks
- intent: build
  examples: |
    - [Add](operation) [DPI](middlebox) middlebox into [all traffic](traffic) from [Internet](location) to the [Labs](location)
    - [add](operation) [dpi](middlebox) to [labs](location) [network](location)
    - [add](operation) [DPI](middlebox) to the [labs](location) network
    - [add](operation) [dpi](middlebox) to [labs](location)
    - Deploy a [file server](middlebox) on [four Debian VMs](asset)
    - Set up a [mail server](middlebox) on [five Red Hat VMs](asset)
    - Install a [proxy server](middlebox) on [two Fedora VMs](asset)
    - Provision a [DNS server](middlebox) on [six Ubuntu VMs](asset)
    - Deploy a [web server](middlebox) on [two Ubuntu Server 20.04 VMs](asset) and [three CentOS VMs](asset)
    - I want to deploy a [database server](middlebox) on [three CentOS VMs](asset) and [four Debian VMs](asset)
    - Deploy a [file server](middlebox) on [four Debian VMs](asset) and [five Red Hat VMs](asset)
    - Set up a [mail server](middlebox) on [five Red Hat VMs](asset) and [six Ubuntu VMs](asset)
    - Install a [proxy server](middlebox) on [two Fedora VMs](asset) and [three CentOS VMs](asset)
    - Provision a [DNS server](middlebox) on [six Ubuntu VMs](asset) and [four Debian VMs](asset)
    - [Add](operation) [monitor](middlebox) for the [university](location)
    - From [internet](location) to [Labs](location) [add](operation) [DPI](middlebox)
    - [add](operation) a [firewall](middlebox)
    - [Add](operation) [inspection](middlebox) for the [university](location)
    - [Remove](operation) [firewall](middlebox) from the [university](location) to the [datacenter](location)
    - From [gateway](location) to [network](location) [add](operation) middlebox [firewall](middlebox)
    - From [university](location) to [internet](location) [add](operation) middlebox [dpi](middlebox)
    - From [dorms](location) to [internet](location) [add](operation) [nat](middlebox)
    - From [university](location) to [internet](location) [add](operation) [firewall](middlebox)
    - Please add [traffic shaper](middlebox) between the [internet](location) and the [dorms](location)
    - [Add](operation) [inspection](middlebox) for the [university](location)
    - Add [monitor](middlebox) for the [university](location)
    - add [shaping](middlebox) for [gateway](location)
    - [Add](operation) [intrusion detection](middlebox) and [address translation](middlebox) for [servers](location) network
    - [Remove](operation) [load balancing](middlebox) from [gateway](location) to [database](location).
    - [Add](operation) [firewall](middlebox) from [gateway](location) to the [lab](location).
    - Deploy a [web server](middlebox) inside an [Ubuntu-server 22.04 VM](asset) with [16GB of RAM](asset) and [4 processing cores](asset), then deploy a [mail server](middlebox) inside a [windows server machine](asset) with [500GB of disk space](asset) and [4 processing cores](asset).
    - I want a [firewall](middlebox) running on a [linux machine](asset) with [8GB of RAM](asset) and a IDS(middlebox) on a [windows machine](asset) with [1TB of disk space](asset).
    - Build a [web server](middlebox) on a [Ubuntu 22.04 VM](asset) with [16GB of RAM](asset) and [4 processing cores](asset), also deploy a [cloud storage](middlebox) with [2TB of disk space](asset).
    - Deploy a [DNS server](middlebox) on [Debian 10](asset) with [4GB of RAM](asset) and [2 processing cores](asset) and a [firewall](middlebox) on [CentOS 8]. 
    - Set up a [mail server](middlebox), a [web server](middlebox) and a [database server](middlebox).
    - build a [web server](middlebox), a [firewall](middlebox) and a [load balancer](middlebox).
    - [limit](qos_constraint) [servers](location) [bandwidth](qos_metric) to [5](qos_value) [gbps](qos_unit)
    - [limit](qos_constraint) [traffic](traffic) to [5](qos_value) [Gbps](qos_unit)
    - [limit](qos_constraint) [traffic](traffic) to [5](qos_value) [Gbps](qos_unit)
    - [limit](qos_constraint) the [bandwidth](qos_metric) to [5](qos_value) [Gb](qos_unit) for rack [servers](location)
    - [limit](qos_constraint) [traffic](traffic) to [5](qos_value) [Gbps](qos_unit)
    - [set](operation) [quota](qos_metric) to [10](qos_value) [GB per week](qos_unit) at [labs](location)
    - [set](operation) [quota](qos_metric) to [10](qos_value) [GB per week](qos_unit) at [servers](location)
    - [Set](operation) [quota](qos_metric) to [10](qos_value) [GB per week](qos_unit) [dorms](location)
    - [Set](operation) [quota](qos_metric) to [10](qos_value) [GB per week](qos_unit) at [guest](location)
    - [Set](operation) [quota](qos_metric) to [10](qos_value) [GB per week](qos_unit) at [dorms](location)
    - [set](operation) [quota](qos_metric) to [10](qos_value) [GB per week](qos_unit) at [LAN](location)
    - [Limit](qos_constraint) [traffic](traffic) to [10](qos_value) [GB per week](qos_unit) at [Dorms](location)
    - for endpoint [dorms](location) [set](operation) [quota](qos_metric) [download](qos_constraint) [10](qos_value) [gb/wk](qos_unit)
    - At endpoint [Dorms](location) [set](operation) [quota](qos_metric) to [10](qos_value) [GB per week](qos_unit)
    - [Limit](qos_constraint) rack [servers](location) to [5](qos_value) [gbps](qos_unit)
    - [Limit](qos_constraint) [servers](location) to [5](qos_value) [gbps](qos_unit)
    - [Set](operation) [5](qos_value) [gbps](qos_unit) [limit](qos_constraint) for [servers](location)
    - [define](operation) [dorms](location) [quota](qos_metric) to [10](qos_value) [gb per week](qos_unit)
    - please [limit](qos_constraint) [bandwidth](qos_metric) to [5](qos_value) [Gigabits per second](qos_unit) for the [server racks](location)
    - [limit](qos_constraint) the [bandwidth](qos_metric) in [server racks](location) to [5](qos_value) [gbps](qos_unit)
    - [set](operation) a [maximum](qos_constraint) of [5](qos_value) [gbps](qos_unit) to the [servers](location)
    - [limit](qos_constraint) the [bandwidth rate](qos_metric) of the [server racks](location) to [5](qos_value) [gbps](qos_unit)
    - [limit](qos_constraint) to [100](qos_value) [Mbps](qos_unit) the [bandwidth](qos_metric) [torrent traffic](traffic) can consume
    - [limit](qos_constraint) [torrent traffic](traffic) to [100](qos_value) [mbps](qos_unit)
    - [Dorms](location) traffic to [internet](location) [must pass through](operation) a [firewall](middlebox)
    - [add](operation) [security](middlebox) from [entry](location) to [backend](location)
    - From [gateway](location) to [my network](location) [remove](operation) [nat](middlebox)
    - [Limit](qos_constraint) in [10](qos_value) [Mbps](qos_unit) the [download rate](qos_metric) of [dorms](location) from [internet](location)
    - [install](operation) an [email scanner](middlebox) for the [gateway](location)
    - [Set](operation) to [1](qos_value) [Gbps](qos_unit) [bandwidth](qos_metric) [limit](qos_constraint) for the traffic to [DMZ](location)
    - I want to [launch](operation) [apache](middlebox) inside a [windows server](operating_system) with [4 processing cores](compute_resource) and [500GB of disk space](storage_resource)
    - I am looking for a [load balancer](middlebox) on a [linux machine](operating_system) that will support a bandwidth of [10Gbps](qos_value) and runs [bind](service) 
    - A [dns server](middlebox) on a [windows server](operating_system) with at least [2.5Ghz](compute_resource) and [8GB of RAM](compute_resource)
    - A [llama chat](service) on a [linux machine](operating_system) with [128GB of VRAM](compute_resource) and [1TB of disk space](storage_resource)
    - I want to [deploy](operation) a [firewall](middlebox) on a [linux machine](operating_system) with [8 CPU cores](compute_resource) and [500GB of disk space](storage_resource)
    - Please [provision](operation) a [mysql server](middlebox) on a [windows server](operating_system) with [16GB of RAM](compute_resource) and [2.8Ghz](compute_resource) CPU
    - I am looking to [instantiate](operation) a [load balancer](middlebox) that runs [haproxy](service) on a [debian server](operating_system) that can handle [5Gbps](qos_value) and runs [redis](service)
    - Could you [spin up](operation) an [reverse proxy](middlebox) that runs [nginx](service) on a [centos machine](operating_system) with [10GB of RAM](compute_resource) and [1TB of storage](storage_resource)
    - I need to [create](operation) a [vpn gateway](middlebox) on a [linux server](operating_system) with [4 processing cores](compute_resource) and a bandwidth of [2Gbps](qos_value)
    - A [proxy](middlebox) on a [windows server](operating_system) with at least [12GB of RAM](compute_resource) and [3.2Ghz](compute_resource) CPU
    - Deploy a [mariadb cluster](service) on a [linux machine](operating_system) with [8 CPU cores](compute_resource) and [2TB of disk space](storage_resource)
    - I want to [launch](operation) a [file server](middlebox) and a [dns server](middlebox) in the same [ubuntu machine](operating_system) with [6 CPU cores](compute_resource) and [1Gbps](qos_value) throughput
    - Please [spin up](operation) a [firewall](middlebox) plus a [load balancer](middlebox) on a [windows server](operating_system) that has [32GB of RAM](compute_resource) and [4TB of storage](storage_resource)
    - I am looking for a [broker](middlebox) using [kafka](service) on a [linux machine](operating_system) with [3.0Ghz](compute_resource) CPU and also runs [zookeeper](service) for coordination
    - I want to [create](operation) a [load balancer](middlebox) with [haproxy](service) inside an [Ubuntu Xenial machine](operating_system) that has [4 cores](compute_resource) and [128Gb of avaible space](storage_resource), this should have a bandwidth of [10Gbps](qos_value)

- intent: feedback
  examples: |
    - [Add](operation) the [middlebox](entity) [firewall](value)
    - [Add](operation) the [middlebox](entity) [dpi](value)
    - [Add](operation) the [middlebox](entity) [load balancer](value)
    - [Add](operation) the [middlebox](entity) [proxy](value)
    - [Add](operation) the [middlebox](entity) [nat](value)
    - [Add](operation) the [middlebox](entity) [monitor](value)
    - [Add](operation) the [asset](entity) [6Gb of RAM](value)
    - [Add](operation) the [asset](entity) [8Gb of RAM](value)
    - [Add](operation) the [asset](entity) [4ghz](value)
    - [Add](operation) the [asset](entity) [2.5Ghz](value)
    - [Add](operation) the [asset](entity) [2TB of disk space](value)
    - [Add](operation) the [asset](entity) [1TB of disk space](value)
    - [Remove](operation) the [asset](entity) [my network](value)
    - [Remove](operation) the [asset](entity) [internet](value)
    - [Remove](operation) the [asset](entity) [file server](value)
    - [Remove](operation) the [asset](entity) [mail server](value)
    - [Remove](operation) the [asset](entity) [cloud](value)
    - [Remove](operation) the [asset](entity) [dns server](value)
    - [Remove](operation) the [middlebox](entity) [10Gb](value)
    - [Remove](operation) the [middlebox](entity) [ubuntu server](value)
    - [Remove](operation) the [middlebox](entity) [windows server](value)
    - [Remove](operation) the [middlebox](entity) [4 processing cores](value)
    - [Remove](operation) the [middlebox](entity) [500GB of disk space](value)
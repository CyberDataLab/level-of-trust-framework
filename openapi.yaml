openapi: 3.1.0
info:
  title: Level of Trust Assessment Function API
  description: This API describes services offered by LoTAF
  contact:
    name: Jose Maria Jorquera Valero
    url: https://cyberdatalab.um.es/josemaria-jorquera/
    email: josemaria.jorquera@um.es
  version: 1.0.0
paths:
  /trust_management_LoTAF:
    get:
      tags:
        - Intent Assurance
      summary: Get trust scores
      description: Retrieve trust scores from the available computation nodes
      operationId: get_trust_scores_trust_management_LoTAF_get
      parameters:
        - name: id
          in: query
          description: Identifier of network service or resource to get Level of Trust
          required: true
          schema:
            type: string
        - name: address
          in: query
          description: IP address in which node to evaluate is reached
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Trust_Score_Response'
                type: array
                title: Response Get Trust Scores Trust Management LoTAF
        '400':
          description: Invalid ID supplied
  /api/trust_management:
    get:
      tags:
        - Trust Management System
      summary: Trust Management Function
      operationId: trust_management_route_api_trust_management_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Trust_Score_Response'
                type: array
                title: Response Get Trust Management System
  /delete_config:
    get:
      tags:
        - Knowledge Representation
      summary: Delete previous configuration of the Neo4J graph
      operationId: 
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Configuration deleted successfully"
        '400':
          description: Bad request, the operation could not be completed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid request."
        '500':
          description: Internal server error, failed to execute the deletion.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "An error occurred while deleting the configuration."

  /remove_graph:
    get:
      summary: Remove all nodes and relationships from the Neo4j graph
      description: Deletes all nodes and relationships from the Neo4j graph database.
      operationId: 
      tags:
        - Knowledge Representation
      responses:
        '200':
          description: Successful removal of the entire graph.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Graph removed successfully."
        '400':
          description: Bad request, the operation could not be completed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid request."
        '500':
          description: Internal server error, failed to execute the graph removal.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "An error occurred while removing the graph."

  /start_config:
    get:
      summary: Start Neo4j configuration for RDF graph and constraints
      description: Initializes Neo4j database with a unique constraint on the URI and configures Neosemantics.
      operationId: 
      tags:
        - Knowledge Representation
      responses:
        '200':
          description: Successful initialization of Neo4j configuration.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Neo4j configuration completed successfully."
        '400':
          description: Bad request, the configuration could not be initialized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid request."
        '500':
          description: Internal server error, failed to execute the configuration.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "An error occurred while configuring Neo4j."
  /loads_triplets:
    get:
      summary: Load RDF triplets into Neo4j from a given file
      description: Imports RDF data from a specified file into the Neo4j database using Neosemantics.
      operationId: 
      tags:
        - Knowledge Representation
      parameters:
        - name: file_path
          in: query
          description: Path to the RDF file to be loaded into the Neo4j database.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: RDF triplets successfully loaded into the database.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "RDF triplets loaded successfully."
        '400':
          description: Bad request, the file path is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid file path provided."
        '404':
          description: File not found at the provided file path.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "File not found at the specified path."
        '500':
          description: Internal server error, failed to load RDF triplets into Neo4j.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "An error occurred while loading RDF triplets into Neo4j."

components:
  schemas:
    Trust_Score_Response:
      properties:
        id:
          type: string
          title: Id
        trust_index:
          type: number
          format: float
          title: Trust Index
      type: object
      required:
        - id
        - trust_index
      title: Trust_Score_Response
      id: uuid1
      trust_index: 0.764
